<?php

/**
 * DO NOT EDIT!
 * This file was automatically generated via bin/generate-validator-spec.php.
 */

namespace AmpProject\Validator\Spec\Section;

use AmpProject\Exception\InvalidDeclarationListName;
use AmpProject\Validator\Spec;

final class DeclarationLists
{
    /** @var array<Spec\DeclarationList> */
    private $declarations;

    public function __construct()
    {
        $this->declarations = [
            'BASIC_DECLARATIONS' => new Spec\DeclarationList(
                [
                    'align-content' => [],
                    'align-items' => [],
                    'align-self' => [],
                    'all' => [],
                    'animation' => [],
                    'animation-delay' => [],
                    'animation-direction' => [],
                    'animation-duration' => [],
                    'animation-fill-mode' => [],
                    'animation-iteration-count' => [],
                    'animation-name' => [],
                    'animation-play-state' => [],
                    'animation-timing-function' => [],
                    'backface-visibility' => [],
                    'background' => [],
                    'background-attachment' => [],
                    'background-blend-mode' => [],
                    'background-clip' => [],
                    'background-color' => [],
                    'background-image' => [],
                    'background-origin' => [],
                    'background-position' => [],
                    'background-repeat' => [],
                    'background-size' => [],
                    'border' => [],
                    'border-bottom' => [],
                    'border-bottom-color' => [],
                    'border-bottom-left-radius' => [],
                    'border-bottom-right-radius' => [],
                    'border-bottom-style' => [],
                    'border-bottom-width' => [],
                    'border-collapse' => [],
                    'border-color' => [],
                    'border-image' => [],
                    'border-image-outset' => [],
                    'border-image-repeat' => [],
                    'border-image-slice' => [],
                    'border-image-source' => [],
                    'border-image-width' => [],
                    'border-left' => [],
                    'border-left-color' => [],
                    'border-left-style' => [],
                    'border-left-width' => [],
                    'border-radius' => [],
                    'border-right' => [],
                    'border-right-color' => [],
                    'border-right-style' => [],
                    'border-right-width' => [],
                    'border-spacing' => [],
                    'border-style' => [],
                    'border-top' => [],
                    'border-top-color' => [],
                    'border-top-left-radius' => [],
                    'border-top-right-radius' => [],
                    'border-top-style' => [],
                    'border-top-width' => [],
                    'border-width' => [],
                    'bottom' => [],
                    'box-decoration-break' => [],
                    'box-shadow' => [],
                    'box-sizing' => [],
                    'break-after' => [],
                    'break-before' => [],
                    'break-inside' => [],
                    'caption-side' => [],
                    'caret-color' => [],
                    'clear' => [],
                    'clip' => [],
                    'color' => [],
                    'column-count' => [],
                    'column-fill' => [],
                    'column-gap' => [],
                    'column-rule' => [],
                    'column-rule-color' => [],
                    'column-rule-style' => [],
                    'column-rule-width' => [],
                    'column-span' => [],
                    'column-width' => [],
                    'columns' => [],
                    'content' => [],
                    'counter-increment' => [],
                    'counter-reset' => [],
                    'cursor' => [],
                    'direction' => [],
                    'display' => [],
                    'empty-cells' => [],
                    'filter' => [],
                    'flex' => [],
                    'flex-basis' => [],
                    'flex-direction' => [],
                    'flex-flow' => [],
                    'flex-grow' => [],
                    'flex-shrink' => [],
                    'flex-wrap' => [],
                    'float' => [],
                    'font' => [],
                    'font-family' => [],
                    'font-feature-settings' => [],
                    'font-kerning' => [],
                    'font-language-override' => [],
                    'font-size' => [],
                    'font-size-adjust' => [],
                    'font-stretch' => [],
                    'font-style' => [],
                    'font-synthesis' => [],
                    'font-variant' => [],
                    'font-variant-alternates' => [],
                    'font-variant-caps' => [],
                    'font-variant-east-asian' => [],
                    'font-variant-ligatures' => [],
                    'font-variant-numeric' => [],
                    'font-variant-position' => [],
                    'font-weight' => [],
                    'grid' => [],
                    'grid-area' => [],
                    'grid-auto-columns' => [],
                    'grid-auto-flow' => [],
                    'grid-auto-rows' => [],
                    'grid-column' => [],
                    'grid-column-end' => [],
                    'grid-column-gap' => [],
                    'grid-column-start' => [],
                    'grid-gap' => [],
                    'grid-row' => [],
                    'grid-row-end' => [],
                    'grid-row-gap' => [],
                    'grid-row-start' => [],
                    'grid-template' => [],
                    'grid-template-areas' => [],
                    'grid-template-columns' => [],
                    'grid-template-rows' => [],
                    'hanging-punctuation' => [],
                    'height' => [],
                    'hyphens' => [],
                    'image-rendering' => [],
                    'isolation' => [],
                    'justify-content' => [],
                    'left' => [],
                    'letter-spacing' => [],
                    'line-break' => [],
                    'line-height' => [],
                    'list-style' => [],
                    'list-style-image' => [],
                    'list-style-position' => [],
                    'list-style-type' => [],
                    'margin' => [],
                    'margin-bottom' => [],
                    'margin-left' => [],
                    'margin-right' => [],
                    'margin-top' => [],
                    'max-height' => [],
                    'max-width' => [],
                    'min-height' => [],
                    'min-width' => [],
                    'mix-blend-mode' => [],
                    'object-fit' => [],
                    'object-position' => [],
                    'opacity' => [],
                    'order' => [],
                    'orphans' => [],
                    'outline' => [],
                    'outline-color' => [],
                    'outline-offset' => [],
                    'outline-style' => [],
                    'outline-width' => [],
                    'overflow' => [],
                    'overflow-wrap' => [],
                    'overflow-x' => [],
                    'overflow-y' => [],
                    'padding' => [],
                    'padding-bottom' => [],
                    'padding-left' => [],
                    'padding-right' => [],
                    'padding-top' => [],
                    'page-break-after' => [],
                    'page-break-before' => [],
                    'page-break-inside' => [],
                    'perspective' => [],
                    'perspective-origin' => [],
                    'pointer-events' => [],
                    'position' => [
                        'valueCasei' => [
                            'absolute',
                            'inherit',
                            'initial',
                            'relative',
                            'static',
                        ],
                    ],
                    'quotes' => [],
                    'resize' => [],
                    'right' => [],
                    'tab-size' => [],
                    'table-layout' => [],
                    'text-align' => [],
                    'text-align-last' => [],
                    'text-combine-upright' => [],
                    'text-decoration' => [],
                    'text-decoration-color' => [],
                    'text-decoration-line' => [],
                    'text-decoration-skip-ink' => [],
                    'text-decoration-style' => [],
                    'text-fill-color' => [],
                    'text-indent' => [],
                    'text-justify' => [],
                    'text-orientation' => [],
                    'text-overflow' => [],
                    'text-shadow' => [],
                    'text-stroke' => [],
                    'text-stroke-color' => [],
                    'text-stroke-width' => [],
                    'text-transform' => [],
                    'text-underline-position' => [],
                    'top' => [],
                    'transform' => [],
                    'transform-origin' => [],
                    'transform-style' => [],
                    'transition' => [],
                    'transition-delay' => [],
                    'transition-duration' => [],
                    'transition-property' => [],
                    'transition-timing-function' => [],
                    'unicode-bidi' => [],
                    'user-select' => [],
                    'vertical-align' => [],
                    'visibility' => [],
                    'white-space' => [],
                    'widows' => [],
                    'width' => [],
                    'word-break' => [],
                    'word-spacing' => [],
                    'word-wrap' => [],
                    'writing-mode' => [],
                    'z-index' => [
                        'valueRegexCasei' => 'auto|initial|inherit|[-+]?[0-9]+',
                    ],
                ]
            ),
            'SVG_BASIC_DECLARATIONS' => new Spec\DeclarationList(
                [
                    'alignment-baseline' => [],
                    'baseline-shift' => [],
                    'clip-path' => [],
                    'clip-rule' => [],
                    'color-interpolation' => [],
                    'color-interpolation-filters' => [],
                    'color-profile' => [],
                    'color-rendering' => [],
                    'dominant-baseline' => [],
                    'enable-background' => [],
                    'fill' => [],
                    'fill-opacity' => [],
                    'fill-rule' => [],
                    'flood-color' => [],
                    'flood-opacity' => [],
                    'glyph-orientation-horizontal' => [],
                    'glyph-orientation-vertical' => [],
                    'kerning' => [],
                    'lighting-color' => [],
                    'marker' => [],
                    'marker-end' => [],
                    'marker-mid' => [],
                    'marker-start' => [],
                    'mask' => [],
                    'shape-rendering' => [],
                    'stop-color' => [],
                    'stop-opacity' => [],
                    'stroke' => [],
                    'stroke-dasharray' => [],
                    'stroke-dashoffset' => [],
                    'stroke-linecap' => [],
                    'stroke-linejoin' => [],
                    'stroke-miterlimit' => [],
                    'stroke-opacity' => [],
                    'stroke-width' => [],
                    'text-anchor' => [],
                    'text-rendering' => [],
                ]
            ),
            'AMP_ONLY_DECLARATIONS' => new Spec\DeclarationList(
                [
                    'clip-path' => [],
                ]
            ),
            'EMAIL_SPECIFIC_DECLARATIONS' => new Spec\DeclarationList(
                [
                    '-moz-appearance' => [],
                    '-webkit-appearance' => [],
                    '-webkit-tap-highlight-color' => [],
                    'align-content' => [],
                    'align-items' => [],
                    'align-self' => [],
                    'appearance' => [],
                    'azimuth' => [],
                    'background' => [],
                    'background-attachment' => [],
                    'background-blend-mode' => [],
                    'background-clip' => [],
                    'background-color' => [],
                    'background-image' => [],
                    'background-origin' => [],
                    'background-position' => [],
                    'background-repeat' => [],
                    'background-size' => [],
                    'border' => [],
                    'border-bottom' => [],
                    'border-bottom-color' => [],
                    'border-bottom-left-radius' => [],
                    'border-bottom-right-radius' => [],
                    'border-bottom-style' => [],
                    'border-bottom-width' => [],
                    'border-collapse' => [],
                    'border-color' => [],
                    'border-left' => [],
                    'border-left-color' => [],
                    'border-left-style' => [],
                    'border-left-width' => [],
                    'border-radius' => [],
                    'border-right' => [],
                    'border-right-color' => [],
                    'border-right-style' => [],
                    'border-right-width' => [],
                    'border-spacing' => [],
                    'border-style' => [],
                    'border-top' => [],
                    'border-top-color' => [],
                    'border-top-left-radius' => [],
                    'border-top-right-radius' => [],
                    'border-top-style' => [],
                    'border-top-width' => [],
                    'border-width' => [],
                    'bottom' => [],
                    'box-shadow' => [],
                    'box-sizing' => [],
                    'break-after' => [],
                    'break-before' => [],
                    'break-inside' => [],
                    'caption-side' => [],
                    'caret-color' => [],
                    'clear' => [],
                    'color' => [],
                    'color-adjust' => [],
                    'column-count' => [],
                    'column-fill' => [],
                    'column-gap' => [],
                    'column-rule' => [],
                    'column-rule-color' => [],
                    'column-rule-style' => [],
                    'column-rule-width' => [],
                    'column-span' => [],
                    'column-width' => [],
                    'columns' => [],
                    'counter-increment' => [],
                    'counter-reset' => [],
                    'cursor' => [
                        'valueCasei' => [
                            'initial',
                            'pointer',
                        ],
                    ],
                    'direction' => [],
                    'display' => [],
                    'elevation' => [],
                    'empty-cells' => [],
                    'filter' => [
                        'valueRegexCasei' => '^ *((blur|brightness|contrast|drop-shadow|grayscale|hue-rotate|invert|opacity|saturate|sepia)\(([^() ]*|(rgb|rgba|hsl|hsla)\([^()]*\))( +([^() ]*|(rgb|rgba|hsl|hsla)\([^()]*\)))*\) *)*$',
                    ],
                    'flex' => [],
                    'flex-basis' => [],
                    'flex-direction' => [],
                    'flex-flow' => [],
                    'flex-grow' => [],
                    'flex-shrink' => [],
                    'flex-wrap' => [],
                    'float' => [],
                    'font' => [],
                    'font-family' => [],
                    'font-feature-settings' => [],
                    'font-kerning' => [],
                    'font-size' => [],
                    'font-size-adjust' => [],
                    'font-stretch' => [],
                    'font-style' => [],
                    'font-synthesis' => [],
                    'font-variant' => [],
                    'font-variant-alternates' => [],
                    'font-variant-caps' => [],
                    'font-variant-east-asian' => [],
                    'font-variant-ligatures' => [],
                    'font-variant-numeric' => [],
                    'font-variation-settings' => [],
                    'font-weight' => [],
                    'gap' => [],
                    'grid' => [],
                    'grid-area' => [],
                    'grid-auto-columns' => [],
                    'grid-auto-flow' => [],
                    'grid-auto-rows' => [],
                    'grid-column' => [],
                    'grid-column-end' => [],
                    'grid-column-start' => [],
                    'grid-row' => [],
                    'grid-row-end' => [],
                    'grid-row-start' => [],
                    'grid-template' => [],
                    'grid-template-areas' => [],
                    'grid-template-columns' => [],
                    'grid-template-rows' => [],
                    'height' => [],
                    'hyphens' => [],
                    'image-orientation' => [],
                    'image-resolution' => [],
                    'inline-size' => [],
                    'isolation' => [],
                    'justify-content' => [],
                    'justify-items' => [],
                    'justify-self' => [],
                    'left' => [],
                    'letter-spacing' => [],
                    'line-break' => [],
                    'line-height' => [],
                    'list-style' => [],
                    'list-style-position' => [],
                    'list-style-type' => [],
                    'margin' => [],
                    'margin-bottom' => [],
                    'margin-left' => [],
                    'margin-right' => [],
                    'margin-top' => [],
                    'max-height' => [],
                    'max-width' => [],
                    'min-height' => [],
                    'min-width' => [],
                    'mix-blend-mode' => [],
                    'object-fit' => [],
                    'object-position' => [],
                    'offset-distance' => [],
                    'opacity' => [],
                    'order' => [],
                    'outline' => [],
                    'outline-color' => [],
                    'outline-offset' => [],
                    'outline-style' => [],
                    'outline-width' => [],
                    'overflow' => [],
                    'overflow-wrap' => [],
                    'overflow-x' => [],
                    'overflow-y' => [],
                    'padding' => [],
                    'padding-bottom' => [],
                    'padding-left' => [],
                    'padding-right' => [],
                    'padding-top' => [],
                    'pause' => [],
                    'pause-after' => [],
                    'pause-before' => [],
                    'perspective' => [],
                    'perspective-origin' => [],
                    'pitch' => [],
                    'pitch-range' => [],
                    'place-items' => [],
                    'position' => [
                        'valueCasei' => [
                            'absolute',
                            'inherit',
                            'initial',
                            'relative',
                            'static',
                        ],
                    ],
                    'quotes' => [],
                    'resize' => [],
                    'richness' => [],
                    'right' => [],
                    'row-gap' => [],
                    'speak' => [],
                    'speak-header' => [],
                    'speak-numeral' => [],
                    'speak-punctuation' => [],
                    'speech-rate' => [],
                    'stress' => [],
                    'table-layout' => [],
                    'text-align' => [],
                    'text-align-last' => [],
                    'text-combine-upright' => [],
                    'text-decoration' => [],
                    'text-decoration-color' => [],
                    'text-decoration-line' => [],
                    'text-decoration-skip' => [],
                    'text-decoration-style' => [],
                    'text-emphasis' => [],
                    'text-emphasis-color' => [],
                    'text-emphasis-position' => [],
                    'text-emphasis-style' => [],
                    'text-indent' => [],
                    'text-justify' => [],
                    'text-orientation' => [],
                    'text-overflow' => [],
                    'text-shadow' => [],
                    'text-transform' => [],
                    'text-underline-position' => [],
                    'top' => [],
                    'transform' => [],
                    'transform-box' => [],
                    'transform-origin' => [],
                    'transform-style' => [],
                    'transition' => [
                        'valueRegexCasei' => '^ *((initial|unset)|(((none|offset-distance|opacity|transform|visibility)( *(|-|\+)([0-9]+|[0-9]*\.[0-9]+)(e(|-|\+)?[0-9]+)?(s|ms)( *(linear|(ease|ease-in|ease-out|ease-in-out|cubic-bezier\( *(|-|\+)([0-9]+|[0-9]*\.[0-9]+)(e(|-|\+)?[0-9]+)?(, *(|-|\+)([0-9]+|[0-9]*\.[0-9]+)(e(|-|\+)?[0-9]+)?){3} *\))|(step-start|step-end|steps\( *(|-|\+)[0-9]+(, *(jump-start|jump-end|jump-none|jump-both|start|end))? *\)))( *(|-|\+)([0-9]+|[0-9]*\.[0-9]+)(e(|-|\+)?[0-9]+)?(s|ms))?)?)?)(, *((none|offset-distance|opacity|transform|visibility)( *(|-|\+)([0-9]+|[0-9]*\.[0-9]+)(e(|-|\+)?[0-9]+)?(s|ms)( *(linear|(ease|ease-in|ease-out|ease-in-out|cubic-bezier\( *(|-|\+)([0-9]+|[0-9]*\.[0-9]+)(e(|-|\+)?[0-9]+)?(, *(|-|\+)([0-9]+|[0-9]*\.[0-9]+)(e(|-|\+)?[0-9]+)?){3} *\))|(step-start|step-end|steps\( *(|-|\+)[0-9]+(, *(jump-start|jump-end|jump-none|jump-both|start|end))? *\)))( *(|-|\+)([0-9]+|[0-9]*\.[0-9]+)(e(|-|\+)?[0-9]+)?(s|ms))?)?)?))*)) *$',
                    ],
                    'transition-delay' => [],
                    'transition-duration' => [],
                    'transition-property' => [
                        'valueRegexCasei' => '^ *(initial|unset|(none|offset-distance|opacity|transform|visibility)(, *(none|offset-distance|opacity|transform|visibility))*) *$',
                    ],
                    'transition-timing-function' => [],
                    'unicode-bidi' => [],
                    'vertical-align' => [],
                    'visibility' => [
                        'valueCasei' => [
                            'hidden',
                            'initial',
                            'visible',
                        ],
                    ],
                    'voice-family' => [],
                    'white-space' => [],
                    'width' => [],
                    'word-break' => [],
                    'word-spacing' => [],
                    'word-wrap' => [],
                    'writing-mode' => [],
                    'z-index' => [
                        'valueRegexCasei' => '([-+]?0)|([-+]?100)|([-+]?[1-9][0-9]?)',
                    ],
                ]
            ),
        ];
    }

    /**
     * Get a specific declaration list.
     *
     * @param string $declarationListName Name of the declaration list to get.
     * @return Spec\DeclarationList Declaration list with the given declaration list name.
     * @throws InvalidDeclarationListName If an invalid declaration list name is requested.
     */
    public function get($declarationListName)
    {
        if (!array_key_exists($declarationListName, $this->declarations)) {
            throw \AmpProject\Exception\InvalidDeclarationListName::forDeclarationListName($declarationListName);
        }

        return $this->declarations[$declarationListName];
    }
}
